name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      milestone:
        description: 'The milestone to generate a release for'
        required: true
        type: string

env:
  solution: MaterialDesignToolkit.Full.sln
  buildConfiguration: 'Release'
  mdixColorsVersion: '2.1.0'
  mdixMahAppsVersion: '0.2.6'
  mdixVersion: '4.7.0'
  # Needed for GitHub CLI
  GH_TOKEN: ${{ github.token }}

jobs:
  collect_contributors:
    runs-on: ubuntu-latest
    name: Generate Release Notes
    steps:
      - name: Get Contributors
        id: get-contribs
        uses: Keboo/GitHubHelper@master
        with:
          milestone: '${{ inputs.milestone }}'
          repository: 'MaterialDesignInXamlToolkit'
          repository-owner: 'MaterialDesignInXAML'
          token: ${{ github.token }}

      - name: Generate Release Notes
        shell: pwsh
        run: |
          $response = gh api --method POST -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/releases/generate-notes -f tag_name='v${{ inputs.milestone }}'
          $json = $response | ConvertFrom-Json
          $releaseNotes = $json.body
          $contributors = "${{ steps.get-contribs.outputs.contributors }}"
          $releaseNotes | Out-File -Append "ReleaseNotes.md"
          "`n" | Out-File -Append "ReleaseNotes.md"
          $contributors | Out-File -Append "ReleaseNotes.md"
          cat "ReleaseNotes.md"

      - name: Upload Release Notes
        uses: actions/upload-artifact@v2
        with:
          name: ReleaseNotes
          path: "ReleaseNotes.md"


  build_artifacts:
    name: Build artifacts
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build and Test
        uses: ./.github/actions/build-and-test
        timeout-minutes: 20
        with:
          solution: ${{ env.solution }}
          buildConfiguration: ${{ env.buildConfiguration }}
          nugetKey: ${{ secrets.PAT }}

      - name: Build NuGets
        shell: pwsh
        run: .\Scripts\BuildNugets.ps1 -MDIXVersion ${{ env.mdixVersion }} -MDIXMahAppsVersion ${{ env.mdixMahAppsVersion }} -MDIXColorsVersion ${{ env.mdixColorsVersion }}

      - name: Upload NuGets
        uses: actions/upload-artifact@v2
        with:
          name: NuGets
          path: "*.nupkg"

      - name: Upload Demo App
        uses: actions/upload-artifact@v2
        with:
          name: DemoApp
          path: "MainDemo.Wpf/bin/${{ env.buildConfiguration }}"

  create_release:
    needs: [collect_contributors, build_artifacts]
    runs-on: ubuntu-latest
    name: Update Release

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v3
        with:
          name: NuGets
          path: nugets

      - name: Download Demo App Artifacts
        uses: actions/download-artifact@v3
        with:
          name: DemoApp
          path: demo-app

      - name: Zip Demo App
        run: zip -r DemoApp.zip demo-app/*

      - name: Download Release Notes
        uses: actions/download-artifact@v3
        with:
          name: ReleaseNotes

      - name: Create Release
        shell: pwsh
        run: |
          # We can't use glob pattern because of this bug https://github.com/cli/cli/issues/5099
          gh release create v${{ inputs.milestone }} --repo '${{ github.repository }}' --draft --latest --title "${{ inputs.milestone }}" --notes-file ReleaseNotes.md (Get-Item '${{ github.workspace }}/nugets/*.nupkg') '${{ github.workspace }}/DemoApp.zip'