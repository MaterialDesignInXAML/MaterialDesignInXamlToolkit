name: Nightly Release

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 9 * * *'

defaults:
  run:
    shell: pwsh

jobs:
  check_for_changes:
    #This check prevents this from running on forks
    if: ${{ github.repository == 'MaterialDesignInXAML/MaterialDesignInXamlToolkit' }}
    runs-on: ubuntu-latest

    outputs:
      should_run: ${{ steps.check_tag.outputs.has_changed }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - id: check_tag
      name: Check nightly_release tag
      run: |
        $nightlyReleaseHash = $(git rev-parse nightly_release)
        $masterHash = $(git rev-parse origin/master)
        $hasChanged = ($nightlyReleaseHash -ne $masterHash).ToString().ToLower()
        echo "Has updates $hasChanged"
        "has_changed=$hasChanged" >> $env:GITHUB_OUTPUT

  test:
    needs: check_for_changes
    runs-on: ubuntu-latest
    steps:
    - name: Test
      run: |
        echo "Test ${{ needs.check_for_changes.outputs.should_run }}"
        
  get_versions:
    needs: [check_for_changes]
    if: ${{ needs.check_for_changes.outputs.should_run == 'true' }}
    name: Get Versions
    uses: ./.github/workflows/get_versions.yml

  build_artifacts:
    name: Build artifacts
    needs: [get_versions, check_for_changes]
    if: ${{ needs.check_for_changes.outputs.should_run == 'true' }}
    uses: ./.github/workflows/build_artifacts.yml
    with:
      mdix-version: ${{ needs.get_versions.outputs.mdix-version }}
      mdix-colors-version: ${{ needs.get_versions.outputs.mdix-colors-version }}
      mdix-mahapps-version: ${{ needs.get_versions.outputs.mdix-colors-version }}

  push_nugets:
    needs: [build_artifacts]
    runs-on: ubuntu-latest
    name: Push NuGets

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v3
        with:
          name: NuGets
          path: nugets

      - name: Push NuGets
        run: |
          dotnet nuget push nugets/*.nupkg --api-key ${{ secrets.PAT }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Update latest tag
        if: ${{ github.event_name != 'push' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -f nightly_release master
          git push -f --tags
