<Window
    x:Class="MaterialDesign3Demo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:domain="clr-namespace:MaterialDesign3Demo.Domain"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance domain:MainWindowViewModel}"
    WindowStartupLocation="CenterScreen"
    Title="Material Design in XAML" 
    AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
    Height="800" SizeChanged="Window_SizeChanged"
    Width="1100"
    Style="{StaticResource MaterialDesignWindow}" 
    Icon="favicon.ico">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy"/>
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock Text="England win the World Cup:"/>
                    <TextBlock Margin="0 8 0 0" Text="{Binding}"/>
                    <TextBlock Margin="0 8 0 0" Text="You will never see that again."/>
                    <Button
                        Margin="0 8 0 0"
                        IsDefault="True"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Content="AWESOME"/>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost
        Identifier="RootDialog"
        DialogTheme="Inherit"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost Name="NavDrawer" OpenMode="Modal"
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
            LeftDrawerCornerRadius="0 20 20 0">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <DockPanel DockPanel.Dock="Top" Margin="16" LastChildFill="False">
                        <Image DockPanel.Dock="Left" Source="Resources/ms-icon-310x310.png"
                               Stretch="Uniform"
                               Width="36"
                               Height="36"/>
                        <TextBlock DockPanel.Dock="Left" Text="Material Design In XAML" HorizontalAlignment="Center"
                                   Margin="10 0 10 0" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Style="{StaticResource MaterialDesignTitleLargeTextBlock}"/>

                        <Button DockPanel.Dock="Right" x:Name="MenuOpen" Height="56" Width="56"
                                Style="{StaticResource MaterialDesignIconForegroundButton}"
                                Foreground="{StaticResource MaterialDesignBody}"
                                Click="MenuOpen_Click">
                            <materialDesign:PackIcon Kind="MenuOpen" Width="36" Height="36"/>
                        </Button>
                    </DockPanel>

                    <Button DockPanel.Dock="Top" Height="56" x:Name="DrawerFAB"
                            Background="{DynamicResource SecondaryHueMidBrush}"
                            Foreground="{DynamicResource SecondaryHueMidBrushForeground}"
                            BorderThickness="0" HorizontalContentAlignment="Left"
                            materialDesign:ButtonAssist.CornerRadius="16" Margin="16 6 16 32"
                            Click="GitHubButton_OnClick">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Github" Width="24" Height="24" VerticalAlignment="Center"/>
                            <TextBlock Text="Source Code" Margin="20 0 0 0" VerticalAlignment="Center" FontSize="20"/>
                        </StackPanel>
                    </Button>


                    <TextBox 
                        x:Name="DemoItemsSearchBox"
                        Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="16 4 16 4"
                        materialDesign:HintAssist.Hint="Search"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="8"/>
                    <ListBox 
                        x:Name="DemoItemsListBox" 
                        Margin="12 16 12 16"
                        SelectedIndex="{Binding SelectedIndex}"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding DemoItems}"
                        PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                        AutomationProperties.Name="DemoPagesListBox">
                        <ListBox.Resources>
                            <Style TargetType="ScrollViewer" BasedOn="{StaticResource MaterialDesignScrollViewer}"/>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                            <DataTemplate DataType="{x:Type domain:DemoItem}">
                                <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                            </DataTemplate>
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesign3.NavigationDrawerPrimaryListBoxItem}">
                                <Setter Property="materialDesign:NavigationDrawerAssist.SelectedIcon" Value="{Binding SelectedIcon}"/>
                                <Setter Property="materialDesign:NavigationDrawerAssist.UnselectedIcon" Value="{Binding UnselectedIcon}"/>
                                <Setter Property="materialDesign:BadgedAssist.Badge" Value="{Binding Notifications}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <materialDesign:ColorZone
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth0"
                    Mode="Standard"
                    DockPanel.Dock="Top">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                Click="MenuToggleButton_OnClick"
                                AutomationProperties.Name="HamburgerToggleButton"
                                Margin="5 0 24 0"/>

                            <Button
                                Margin="0 0 0 0"
                                ToolTip="Previous Item"
                                Command="{Binding MovePrevCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Button 
                                Margin="16 0 0 0"
                                ToolTip="Next Item"
                                Command="{Binding MoveNextCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        </StackPanel>



                        <TextBlock Grid.Column="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="22"
                                   AutomationProperties.Name="Material Design In XAML Toolkit"
                                   Text="Material Design In XAML Toolkit"/>

                        <materialDesign:PopupBox Grid.Column="2"
                                                 PlacementMode="BottomAndAlignRightEdges"
                                                 StaysOpen="False">
                            <StackPanel>
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Text="Light"
                                        Margin="0 0 10 0"/>
                                    <ToggleButton
                                        x:Name="DarkModeToggleButton"
                                        Click="MenuDarkModeButton_Click"
                                        Grid.Column="1"/>
                                    <TextBlock
                                        Text="Dark"
                                        Margin="10 0 0 0"
                                        Grid.Column="2"/>
                                    <TextBlock
                                        Text="Enabled"
                                        Margin="0 10 10 0"
                                        Grid.Row="1"/>
                                    <ToggleButton
                                        x:Name="ControlsEnabledToggleButton"
                                        Margin="0 10 0 0"
                                        IsChecked="{Binding ControlsEnabled}"
                                        Grid.Row="1"
                                        Grid.Column="1"/>
                                </Grid>

                                <Separator/>

                                <Button
                                    Content="Hello World"
                                    Click="MenuPopupButton_OnClick"/>

                                <Button
                                    Content="Nice Popup"
                                    Click="MenuPopupButton_OnClick"/>

                                <Button
                                    Content="Can't Touch This"
                                    IsEnabled="False"/>

                                <Separator/>

                                <Button
                                    Content="Goodbye"
                                    Click="MenuPopupButton_OnClick"/>
                            </StackPanel>
                        </materialDesign:PopupBox>
                    </Grid>
                </materialDesign:ColorZone>

                <Grid Grid.Row="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Background="{DynamicResource MaterialDesignPaper}" Width="80" x:Name="NavRail"
                          Visibility="{Binding ElementName=drawer, Path=IsLeftDrawerOpen, Converter={StaticResource InverseBoolToVisConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Button Grid.Row="0" Height="56" Width="56"
                                Background="{DynamicResource SecondaryHueMidBrush}" Foreground="{DynamicResource SecondaryHueMidBrushForeground}" BorderThickness="0"
                                materialDesign:ButtonAssist.CornerRadius="16" Margin="0 25 0 60" Click="GitHubButton_OnClick">
                            <materialDesign:PackIcon Kind="Github" Width="24" Height="24"/>
                        </Button>

                        <Viewbox Grid.Row="1" VerticalAlignment="Top" Stretch="Uniform">
                            <ListBox VerticalAlignment="Top" ItemsSource="{Binding MainDemoItems}" SelectedValue="{Binding SelectedItem}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesign3.NavigationRailPrimaryListBoxItem}">
                                        <Setter Property="materialDesign:NavigationRailAssist.SelectedIcon" Value="{Binding SelectedIcon}"/>
                                        <Setter Property="materialDesign:NavigationRailAssist.UnselectedIcon" Value="{Binding UnselectedIcon}"/>
                                        <Setter Property="materialDesign:NavigationRailAssist.IsTextVisible" Value="True"/>
                                        <Setter Property="materialDesign:BadgedAssist.Badge" Value="{Binding Notifications}"/>
                                        <Setter Property="materialDesign:BadgedAssist.BadgeBackground" Value="#930006"/>
                                        <Setter Property="materialDesign:BadgedAssist.BadgeForeground" Value="#FFDAD4"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type domain:DemoItem}">
                                        <TextBlock Text="{Binding Name}" TextWrapping="Wrap" TextAlignment="Center"/>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </Viewbox>
                    </Grid>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <domain:DocumentationLinks DataContext="{Binding SelectedItem}"/>

                        <ScrollViewer x:Name="MainScrollViewer"
                                      Grid.Row="1"
                                      materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                                      HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                                      VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}">
                            <ContentControl DataContextChanged="OnSelectedItemChanged"
                                            DataContext="{Binding SelectedItem}"
                                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"/>
                        </ScrollViewer>

                        <materialDesign:Card x:Name="NotificationPanel" Grid.Row="0" Grid.RowSpan="2"
                                             HorizontalAlignment="Right" VerticalAlignment="Top"
                                             Margin="10" UniformCornerRadius="25">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Content="{materialDesign:PackIcon Kind=Close}" HorizontalAlignment="Right"
                                        Click="CloseNotificationPanel_Click" Style="{StaticResource MaterialDesignIconForegroundButton}"/>
                                <TextBlock Grid.Row="1" Text="{Binding DemoItems[0].Notifications, StringFormat={}You have {0} new notifications!}" TextWrapping="Wrap"
                                           TextAlignment="Center" FontSize="18" Margin="0 0 0 20"/>
                                <StackPanel  Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
                                    <RepeatButton Content="Add New Notification" Style="{StaticResource MaterialDesignFlatButton}"
                                             materialDesign:ButtonAssist.CornerRadius="16" Margin="0 0 10 0"
                                             Command="{Binding AddNewNotificationCommand}"/>
                                    <Button Content="Dismiss All" Style="{StaticResource MaterialDesignFlatMidBgButton}"
                                             materialDesign:ButtonAssist.CornerRadius="16" 
                                             Command="{Binding DismissAllNotificationsCommand}"/>
                                </StackPanel>

                            </Grid>
                        </materialDesign:Card>

                        <materialDesign:Snackbar x:Name="MainSnackbar"
                                                 MessageQueue="{materialDesign:MessageQueue}"
                                                 Grid.Row="1"/>
                    </Grid>
                </Grid>

                <Grid Grid.Row="2" x:Name="NavBar">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <materialDesign:ColorZone Grid.Row="1"
                                              Background="{DynamicResource MaterialDesignCardBackground}"
                                              Height="80">
                        <ListBox ItemsSource="{Binding MainDemoItems}"
                                 SelectedValue="{Binding SelectedItem}"
                                 Style="{StaticResource MaterialDesign3.NavigationBarListBox}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesign3.NavigationBarPrimaryListBoxItem}">
                                    <Setter Property="materialDesign:NavigationBarAssist.SelectedIcon" Value="{Binding SelectedIcon}"/>
                                    <Setter Property="materialDesign:NavigationBarAssist.UnselectedIcon" Value="{Binding UnselectedIcon}"/>
                                    <Setter Property="materialDesign:NavigationBarAssist.IsTextVisible" Value="True"/>
                                    <Setter Property="materialDesign:BadgedAssist.Badge" Value="{Binding Notifications}"/>
                                    <Setter Property="materialDesign:BadgedAssist.BadgeBackground" Value="#930006"/>
                                    <Setter Property="materialDesign:BadgedAssist.BadgeForeground" Value="#FFDAD4"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.Resources>
                                <DataTemplate DataType="{x:Type domain:DemoItem}">
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" TextAlignment="Center"/>
                                </DataTemplate>
                            </ListBox.Resources>
                        </ListBox>
                    </materialDesign:ColorZone>
                </Grid>

                <Button Grid.Row="1"
                        x:Name="FAB"
                        Height="96"
                        Width="96"
                        Background="{DynamicResource SecondaryHueMidBrush}"
                        Foreground="{DynamicResource SecondaryHueMidBrushForeground}" BorderThickness="0"
                        materialDesign:ButtonAssist.CornerRadius="28"
                        Margin="0 0 16 16"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Click="GitHubButton_OnClick">
                    <materialDesign:PackIcon Kind="Github"
                                             Width="36"
                                             Height="36"/>
                </Button>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
