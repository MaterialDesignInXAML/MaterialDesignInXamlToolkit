<Application x:Class="MaterialDesign3Demo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:materialDesignDemo="clr-namespace:MaterialDesign3Demo"
             xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
             xmlns:smtxAe="clr-namespace:ShowMeTheXAML.AvalonEdit;assembly=ShowMeTheXAML.AvalonEdit"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <!-- This is the current way to setup your app's initial theme -->
        <materialDesign:BundledTheme BaseTheme="Inherit"
                                     ColorAdjustment="{materialDesign:ColorAdjustment}"
                                     PrimaryColor="DeepPurple"
                                     SecondaryColor="Lime" />

        <!-- If you would prefer to use your own colors there is an option for that as well -->
        <!--<materialDesign:CustomColorTheme BaseTheme="Light" PrimaryColor="Aqua" SecondaryColor="DarkGreen" />-->

        <!-- You can also use the built in theme dictionaries as well
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
        -->

        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />

        <ResourceDictionary Source="pack://application:,,,/ShowMeTheXAML.AvalonEdit;component/Themes/xamldisplayer.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="smtx:XamlDisplay" BasedOn="{StaticResource {x:Type smtx:XamlDisplay}}">
        <Style.Resources>
          <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
              <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
              <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <smtxAe:TextDocumentValueConverter x:Key="TextDocumentValueConverter" />
          </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Formatter">
          <Setter.Value>
            <smtx:XamlFormatter Indent="  " NewLineOnAttributes="True">
              <smtx:XamlFormatter.NamespacesToRemove>
                <system:String>http://materialdesigninxaml.net/winfx/xaml/themes</system:String>
              </smtx:XamlFormatter.NamespacesToRemove>
            </smtx:XamlFormatter>
          </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="smtx:XamlDisplay">
              <DockPanel>
                <materialDesign:PopupBox x:Name="PopupBox"
                                         Padding="10"
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         DockPanel.Dock="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesignDemo:XamlDisplayEx.ButtonDock)}"
                                         IsTabStop="False"
                                         StaysOpen="True">
                  <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Margin="3"
                                             Background="Transparent"
                                             Cursor="Hand"
                                             Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                             Kind="Xml"
                                             ToolTip="View XAML">
                      <materialDesign:PackIcon.Style>
                        <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                          <Setter Property="Opacity" Value="0.4" />
                          <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                              <Setter Property="Opacity" Value="1" />
                            </Trigger>
                          </Style.Triggers>
                        </Style>
                      </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                  </materialDesign:PopupBox.ToggleContent>
                  <Border MaxWidth="800" MaxHeight="600">
                    <DockPanel>
                      <Button Margin="0,10,0,0"
                              HorizontalAlignment="Right"
                              Command="Copy"
                              CommandParameter="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}"
                              Content="_COPY"
                              DockPanel.Dock="Bottom"
                              Style="{StaticResource MaterialDesignRaisedButton}"
                              Tag="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}" />
                      <avalonEdit:TextEditor Document="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextDocumentValueConverter}}" Style="{StaticResource AvalonTextEditorXamlDisplay}" />
                    </DockPanel>
                  </Border>

                </materialDesign:PopupBox>
                <Grid>
                  <AdornerDecorator>
                    <Border Margin="-5"
                            BorderBrush="{DynamicResource SecondaryHueMidBrush}"
                            Opacity=".4">
                      <Border.Style>
                        <Style TargetType="Border">
                          <Setter Property="BorderThickness" Value="0" />
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=PopupBox, Path=IsPopupOpen}" Value="True">
                              <Setter Property="BorderThickness" Value="5" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Border.Style>
                    </Border>
                  </AdornerDecorator>
                  <ContentPresenter />
                </Grid>
              </DockPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="materialDesignDemo:XamlDisplayEx.ButtonDock" Value="Right" />
      </Style>
    </ResourceDictionary>
  </Application.Resources>
</Application>


