<UserControl
    x:Class="MaterialDesign3Demo.DataGrids"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
    xmlns:domain="clr-namespace:MaterialDesign3Demo.Domain"
    mc:Ignorable="d" 
    d:DesignHeight="300"
    d:DesignWidth="600"
    d:DataContext="{d:DesignInstance domain:ListsAndGridsViewModel}">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <StackPanel>
        <TextBlock
            Style="{StaticResource MaterialDesignHeadline5TextBlock}"
            Text="Custom Columns"/>
        
        <smtx:XamlDisplay UniqueKey="grids_1">
            <DataGrid
                ItemsSource="{Binding Items1}"
                CanUserAddRows="False" AutoGenerateColumns="False"
                HeadersVisibility="All">
                <DataGrid.Resources>
                    <domain:BindingProxy
                        x:Key="DataContextProxy"
                        Data="{Binding}" />
                </DataGrid.Resources>
                
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" 
                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Transparent">
                                <CheckBox
                                    IsChecked="{Binding Data.IsAllItems1Selected, Source={StaticResource DataContextProxy}}"/>
                            </Border>
                        </DataGridCheckBoxColumn.Header>
                        
                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>
                    
                    <DataGridTextColumn
                        Binding="{Binding Code}"
                        Header="Code"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"/>
                    
                    <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                    <materialDesign:DataGridTextColumn
                        Header="Name"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                        <materialDesign:DataGridTextColumn.Binding>
                            <Binding Path="Name">
                                <Binding.ValidationRules>
                                    <domain:NotEmptyValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </materialDesign:DataGridTextColumn.Binding>
                    </materialDesign:DataGridTextColumn>
                    
                    <!-- set a max length to get an indicator in the editor -->
                    <DataGridTextColumn
                        Header="Description"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="Description">
                                <Binding.ValidationRules>
                                    <domain:NotEmptyValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    
                    <materialDesign:DataGridTextColumn
                        Binding="{Binding Numeric}"
                        Header="Number with long header"
                        Width="120"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Right" />
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock
                                                TextWrapping="Wrap"
                                                Text="{Binding}"
                                                TextAlignment="Right"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </materialDesign:DataGridTextColumn>

                    <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                    <materialDesign:DataGridComboBoxColumn
                        Header="Food with long header" IsEditable="True"
                        Width="100"
                        SelectedValueBinding="{Binding Food}"
                        ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}">
                        <!--Setting the editing element style allows access to all of the combo box's properties
                        <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                <Setter Property="IsEditable" Value="True" />
                            </Style>
                        </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                        -->
                    </materialDesign:DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </smtx:XamlDisplay>
        
        <TextBlock
            Style="{StaticResource MaterialDesignHeadline5TextBlock}"
            Text="Auto Generated Columns"
            Margin="0 24 0 0"/>
        
        <smtx:XamlDisplay UniqueKey="grids_2">
            <DataGrid
                ItemsSource="{Binding Items2}"
                CanUserAddRows="False"
                SelectionUnit="Cell"
                SelectionMode="Extended" />
        </smtx:XamlDisplay>
        
        <TextBlock
            Style="{StaticResource MaterialDesignHeadline6TextBlock}"
            Text="Custom Padding" Margin="0 24 0 0"/>
        
        <smtx:XamlDisplay UniqueKey="grids_3">
            <DataGrid
                ItemsSource="{Binding Items3}"
                CanUserSortColumns="False"
                CanUserAddRows="False"
                materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2" />

        </smtx:XamlDisplay>
    </StackPanel>
</UserControl>

