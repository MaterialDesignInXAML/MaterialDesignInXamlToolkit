<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="MaterialDesignSplitButtonPopupElevatedCardStyle" TargetType="{x:Type ContentControl}">
    <Style.Resources>
      <wpf:ElevationMarginConverter x:Key="ElevationMarginConverter" />
    </Style.Resources>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <wpf:Card wpf:ElevationAssist.Elevation="{TemplateBinding wpf:ElevationAssist.Elevation}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ElevationAssist.Elevation), Converter={StaticResource ElevationMarginConverter}}"
                    UniformCornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:SplitButtonContent}, Path=PopupUniformCornerRadius}">
            <ContentControl Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
          </wpf:Card>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MaterialDesignSplitButtonPopupOutlinedCardStyle" TargetType="{x:Type ContentControl}">
    <Style.Resources>
      <wpf:ElevationMarginConverter x:Key="ElevationMarginConverter" />
    </Style.Resources>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <wpf:Card Style="{StaticResource MaterialDesignOutlinedCard}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ElevationAssist.Elevation), Converter={StaticResource ElevationMarginConverter}}"
                    UniformCornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:SplitButtonContent}, Path=PopupUniformCornerRadius}">
            <ContentControl Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
          </wpf:Card>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MaterialDesignSplitButtonContent" TargetType="{x:Type wpf:SplitButtonContent}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type wpf:SplitButtonContent}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Popup PlacementTarget="{TemplateBinding PopupPlacementTarget}"
                   Placement="Bottom"
                   StaysOpen="False"
                   AllowsTransparency="True"
                   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen}">
              <ContentControl Style="{TemplateBinding PopupContentStyle}"
                              Content="{TemplateBinding PopupContent}"
                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                              wpf:ElevationAssist.Elevation="{TemplateBinding PopupElevation}"/>
            </Popup>

            <Rectangle Grid.Column="0"
                       Width="1"
                       Fill="{DynamicResource MaterialDesignLightSeparatorBackground}"/>
            <Button Grid.Column="1"
                    VerticalAlignment="Stretch"
                    Style="{x:Null}"
                    Foreground="{TemplateBinding Foreground}"
                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpenCommand}">
              <Button.Template>
                <ControlTemplate>
                  <Grid Background="Transparent">
                    <wpf:PackIcon Kind="ChevronDown"
                                  Margin="4,0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </Grid>
                </ControlTemplate>
              </Button.Template>
            </Button>
            
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
