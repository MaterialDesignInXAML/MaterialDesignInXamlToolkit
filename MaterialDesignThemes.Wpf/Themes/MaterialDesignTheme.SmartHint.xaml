<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf">

  <converters:BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
  <converters:BooleanToVisibilityConverter x:Key="InverseBoolToVisConverter"
                                           FalseValue="Visible"
                                           TrueValue="Collapsed" />
  <converters:FloatingHintTransformConverter x:Key="FloatingHintCanvasTransformConverter" ApplyScaleTransform="False" />
  <converters:FloatingHintTransformConverter x:Key="FloatingHintTransformConverter" ApplyTranslateTransform="False" />
  <converters:FloatingHintTextBlockMarginConverter x:Key="FloatingHintTextBlockMarginConverter" />
  <system:Double x:Key="NoContentFloatingScale">1.0</system:Double>
  <CubicEase x:Key="AnimationEasingFunction" EasingMode="EaseInOut" />

  <Style TargetType="{x:Type wpf:SmartHint}">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type wpf:SmartHint}">
          <Grid Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ContentStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="*" To="HintFloatingPosition">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="SimpleHintTextBlock"
                                       Storyboard.TargetProperty="Opacity"
                                       To="0"
                                       Duration="0:0:0" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="*" To="HintRestingPosition">
                    <Storyboard>
                      <DoubleAnimation EasingFunction="{StaticResource AnimationEasingFunction}"
                                       Storyboard.TargetName="SimpleHintTextBlock"
                                       Storyboard.TargetProperty="Opacity"
                                       Duration="0:0:0.15" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="HintFloatingPosition">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SimpleHintTextBlock"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HintRestingPosition">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SimpleHintTextBlock"
                                     Storyboard.TargetProperty="Opacity"
                                     Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentControl x:Name="SimpleHintTextBlock"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Hint}"
                            FontSize="{TemplateBinding FontSize}"
                            IsHitTestVisible="False"
                            IsTabStop="False"
                            Opacity="{TemplateBinding HintOpacity}"
                            Visibility="{TemplateBinding UseFloating, Converter={StaticResource InverseBoolToVisConverter}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
    <Style.Triggers>
      <Trigger Property="UseFloating" Value="True">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type wpf:SmartHint}">
              <Grid Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="ContentStates">
                    <VisualStateGroup.Transitions>
                      <VisualTransition From="*" To="HintFloatingPosition">
                        <Storyboard>
                          <DoubleAnimation EasingFunction="{StaticResource AnimationEasingFunction}"
                                           Storyboard.TargetName="FloatingHintTextBlock"
                                           Storyboard.TargetProperty="Opacity"
                                           To="{TemplateBinding HintOpacity}"
                                           Duration="0:0:0.75" />
                          <DoubleAnimation EasingFunction="{StaticResource AnimationEasingFunction}"
                                           Storyboard.TargetName="ScaleHost"
                                           Storyboard.TargetProperty="Scale"
                                           To="1"
                                           Duration="0:0:0.75" />
                        </Storyboard>
                      </VisualTransition>
                      <VisualTransition From="*" To="HintRestingPosition">
                        <Storyboard>
                          <DoubleAnimation EasingFunction="{StaticResource AnimationEasingFunction}"
                                           Storyboard.TargetName="FloatingHintTextBlock"
                                           Storyboard.TargetProperty="Opacity"
                                           Duration="0:0:0.15" />
                          <DoubleAnimation EasingFunction="{StaticResource AnimationEasingFunction}"
                                           Storyboard.TargetName="ScaleHost"
                                           Storyboard.TargetProperty="Scale"
                                           Duration="0:0:0.15" />
                        </Storyboard>
                      </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="HintFloatingPosition">
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="FloatingHintTextBlock"
                                         Storyboard.TargetProperty="Opacity"
                                         To="{TemplateBinding HintOpacity}"
                                         Duration="0" />
                        <DoubleAnimation Storyboard.TargetName="ScaleHost"
                                         Storyboard.TargetProperty="Scale"
                                         To="1"
                                         Duration="0" />
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HintRestingPosition">
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="FloatingHintTextBlock"
                                         Storyboard.TargetProperty="Opacity"
                                         Duration="0" />
                        <DoubleAnimation Storyboard.TargetName="ScaleHost"
                                         Storyboard.TargetProperty="Scale"
                                         Duration="0" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <wpf:ScaleHost x:Name="ScaleHost" />

                <!-- This Grid uses ClipToBounds to ensure that the hint rendered in the nested Canvas is clipped at the edges of the Grid. The Grid respects a "fixed" width on a parent container.

                     Challenge: We need to somehow calculate the Margin for this Grid such that it will allow the hint to move to its floating position without being clipped.
                                This is probably best done using negative margins (e.g. currently hardcoded for demo purposes). However we need to take HintAssist.FloatingOffset into account.
                                HintAssist.FloatingOffset defaults to (0, -16) which is a upward vertical-only floatation, but calling code can set this to whatever and the clipping needs to respect that.

                                With the margin of "0,-50,0,-50" currently used, we have hardcoded enough room for the default vertical-only floatation, but the initial alignment of the hint inside the
                                TextBox is now wrong; thus there are several challenges here, but I think this is probably the direction we need to go.
                -->
                <Grid ClipToBounds="True" Margin="0,-50,0,-50">
                  <Canvas HorizontalAlignment="Left" Width="{Binding ElementName=FloatingHintTextBlock, Path= ActualWidth}" Height="{Binding ElementName=FloatingHintTextBlock, Path=ActualHeight}">
                    <Canvas.RenderTransform>
                      <MultiBinding Converter="{StaticResource FloatingHintCanvasTransformConverter}">
                        <Binding ElementName="ScaleHost" Path="Scale" />
                        <Binding Path="FloatingScale" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Source="{StaticResource NoContentFloatingScale}" />
                        <Binding Path="FloatingOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                      </MultiBinding>
                    </Canvas.RenderTransform>
                    <ContentControl x:Name="FloatingHintTextBlock"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Hint}"
                                  FontFamily="{TemplateBinding FontFamily}"
                                  FontSize="{TemplateBinding FontSize}"
                                  IsHitTestVisible="False"
                                  IsTabStop="False"
                                  Opacity="{TemplateBinding HintOpacity}"
                                  RenderTransformOrigin="0,0"
                                  Visibility="{TemplateBinding UseFloating, Converter={StaticResource BoolToVisConverter}}">
                      <ContentControl.Margin>
                        <MultiBinding Converter="{StaticResource FloatingHintTextBlockMarginConverter}">
                          <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(wpf:HintAssist.FloatingHintHorizontalAlignment)" />
                          <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HorizontalContentAlignment" />
                          <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth" />
                          <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                          <Binding ElementName="ScaleHost" Path="Scale" />
                          <Binding Path="FloatingScale" RelativeSource="{RelativeSource TemplatedParent}" />
                          <Binding Source="{StaticResource NoContentFloatingScale}" />
                        </MultiBinding>
                      </ContentControl.Margin>
                      <ContentControl.Tag>
                        <system:Double>0.0</system:Double>
                      </ContentControl.Tag>
                      <ContentControl.RenderTransform>
                        <MultiBinding Converter="{StaticResource FloatingHintTransformConverter}">
                          <Binding ElementName="ScaleHost" Path="Scale" />
                          <Binding Path="FloatingScale" RelativeSource="{RelativeSource TemplatedParent}" />
                          <Binding Source="{StaticResource NoContentFloatingScale}" />
                          <Binding Path="FloatingOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                      </ContentControl.RenderTransform>
                    </ContentControl>
                  </Canvas>
                </Grid>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
