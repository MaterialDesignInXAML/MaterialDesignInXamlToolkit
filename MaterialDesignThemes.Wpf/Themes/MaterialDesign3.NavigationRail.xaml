<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Badged.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converters:BorderClipConverter x:Key="BorderClipConverter"/>
    <converters:BrushRoundConverter x:Key="BrushRoundConverter"/>


    <Style x:Key="MaterialDesign3.NavigationRailListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBodyLight}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="0 3"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="MinHeight" Value="62"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="wpf:NavigationRailAssist.CornerRadius" Value="0"/>
        <Setter Property="wpf:NavigationRailAssist.SelectionHeight" Value="32"/>
        <Setter Property="wpf:NavigationRailAssist.SelectionWidth" Value="56"/>
        <Setter Property="wpf:NavigationRailAssist.SelectionCornerRadius" Value="16"/>
        <Setter Property="wpf:NavigationRailAssist.SelectedIcon" Value="Circle"/>
        <Setter Property="wpf:NavigationRailAssist.UnselectedIcon" Value="CircleOutline"/>
        <Setter Property="wpf:NavigationRailAssist.IsTextVisible" Value="True"/>
        <Setter Property="wpf:NavigationRailAssist.IconSize" Value="24"/>
        <Setter Property="wpf:BadgedAssist.BadgeBackground" Value="{StaticResource PrimaryHueLightBrush}"/>
        <Setter Property="wpf:BadgedAssist.BadgeForeground" Value="{StaticResource PrimaryHueLightForegroundBrush}"/>
        <Setter Property="wpf:BadgedAssist.BadgePlacementMode" Value="TopRight"/>
        <Setter Property="wpf:ThemeAssist.TriggerBrush" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border"
                            Margin="{TemplateBinding Margin}"
                            CornerRadius="{Binding Path=(wpf:NavigationRailAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                                             To="0.1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.6"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected"/>
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid ClipToBounds="False">
                            <Grid>
                                <Grid.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </Grid.Clip>
                                <Border x:Name="MouseOverBorder"
                                        Opacity="0"
                                        Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                                <Border x:Name="SelectedBorder" Opacity="0"
                                        VerticalAlignment="Top"
                                        Height="{Binding Path=(wpf:NavigationRailAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="{Binding Path=(wpf:NavigationRailAssist.SelectionWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding Path=(wpf:NavigationRailAssist.SelectionCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                </Border>
                                <wpf:Ripple Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                            Focusable="False" ClipToBounds="False"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}"
                                            RecognizesAccessKey="False"/>                                
                            </Grid>

                            
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4*"/>
                                    <RowDefinition Height="3*"/>
                                </Grid.RowDefinitions>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="IconContainer" Grid.RowSpan="1"
                                      Height="{Binding Path=(wpf:NavigationRailAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}">
                                    <wpf:Badged x:Name="badge" Badge="{Binding Path=(wpf:BadgedAssist.Badge), RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Center"
                                                Style="{StaticResource MaterialDesignBadge}"
                                                BadgeBackground="{Binding Path=(wpf:BadgedAssist.BadgeBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                BadgeForeground="{Binding Path=(wpf:BadgedAssist.BadgeForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                                VerticalAlignment="Center"
                                                BadgePlacementMode="{Binding Path=(wpf:BadgedAssist.BadgePlacementMode), RelativeSource={RelativeSource TemplatedParent}}">

                                        <wpf:PackIcon x:Name="Icon" HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Kind="{Binding Path=(wpf:NavigationRailAssist.SelectedIcon), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Width="{Binding Path=(wpf:NavigationRailAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Height="{Binding Path=(wpf:NavigationRailAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}" />
                                    </wpf:Badged>
                                </Grid>
                                <ContentControl x:Name="Text" Content="{TemplateBinding Content}" Grid.Row="1" Margin="4 4 4 0" Padding="0"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Icon" Property="Kind" Value="{Binding Path=(wpf:NavigationRailAssist.UnselectedIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="wpf:NavigationRailAssist.IsTextVisible" Value="False">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IconContainer" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="SelectedBorder" Property="Height" Value="{Binding Path=(wpf:NavigationRailAssist.SelectionWidth), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="SelectedBorder" Property="CornerRadius" Value="{Binding Path=(wpf:NavigationRailAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="wpf:BadgedAssist.IsMiniBadge" Value="True">
                            <Setter TargetName="badge" Property="Style" Value="{StaticResource MaterialDesignMiniBadge}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesign3.NavigationRailPrimaryListBoxItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesign3.NavigationRailListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
    </Style>

</ResourceDictionary>