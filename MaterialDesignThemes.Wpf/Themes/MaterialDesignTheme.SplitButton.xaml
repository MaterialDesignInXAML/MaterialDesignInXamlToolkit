<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- Base style for SplitButton -->
  <Style x:Key="MaterialDesignSplitButton" TargetType="{x:Type wpf:SplitButton}">
    <Style.Resources>
      <converters:CornerRadiusCloneConverter x:Key="LeftButtonCornerRadiusConverter" FixedTopRight="0" FixedBottomRight="0" />
      <converters:CornerRadiusCloneConverter x:Key="RightButtonCornerRadiusConverter" FixedTopLeft="0" FixedBottomLeft="0" />
    </Style.Resources>

    <Setter Property="Height" Value="32" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="16,4,16,4" />
    <Setter Property="RightButtonMargin" Value="-2,-1,-1,-1" />
    <Setter Property="TextBlock.FontSize" Value="14" />
    <Setter Property="TextBlock.FontWeight" Value="Medium" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="wpf:ButtonAssist.CornerRadius" Value="2" />
    <Setter Property="wpf:RippleAssist.Feedback" Value="White" />
    <Setter Property="wpf:ElevationAssist.Elevation" Value="Dp0" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type wpf:SplitButton}">
          <Grid x:Name="OuterGrid"
                Margin="{TemplateBinding Margin}"
                Height="{TemplateBinding Height}"
                Width="{TemplateBinding Width}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button x:Name="PART_Button"
                    Grid.Column="0"
                    Content="{TemplateBinding Content}"
                    Height="{TemplateBinding Height}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Padding="{TemplateBinding Padding}"
                    Style="{TemplateBinding ButtonStyle}"
                    wpf:ButtonAssist.CornerRadius="{TemplateBinding wpf:ButtonAssist.CornerRadius, Converter={StaticResource LeftButtonCornerRadiusConverter}}"
                    wpf:ElevationAssist.Elevation="{TemplateBinding wpf:ElevationAssist.Elevation}"/>

            <wpf:PopupBox x:Name="PART_PopupBox"
                          Grid.Column="1"
                          wpf:RippleAssist.IsDisabled="True"
                          Height="{TemplateBinding Height}"
                          Padding="0"
                          BorderThickness="0"
                          PopupUniformCornerRadius="{TemplateBinding PopupUniformCornerRadius}"
                          PopupElevation="{TemplateBinding PopupElevation}"
                          PlacementMode="{TemplateBinding PopupPlacementMode}"
                          PlacementTarget="{Binding ElementName=OuterGrid}">
              <wpf:PopupBox.ToggleContent>
                <Button Command="{TemplateBinding PopupBoxButtonClickedCommand}"
                        Content="{wpf:PackIcon ChevronDown}"
                        Height="{TemplateBinding Height}"
                        IsHitTestVisible="True"
                        Margin="{TemplateBinding RightButtonMargin}"
                        Padding="{TemplateBinding Padding}"
                        Style="{TemplateBinding ButtonStyle}"
                        wpf:ButtonAssist.CornerRadius="{TemplateBinding wpf:ButtonAssist.CornerRadius, Converter={StaticResource RightButtonCornerRadiusConverter}}"
                        wpf:ElevationAssist.Elevation="{TemplateBinding wpf:ElevationAssist.Elevation}"
                        wpf:RippleAssist.IsDisabled="False"
                        wpf:RippleAssist.IsCentered="False"
                        wpf:RippleAssist.ClipToBounds="True"/>
              </wpf:PopupBox.ToggleContent>
              <wpf:PopupBox.PopupContent>
                <ContentControl Content="{TemplateBinding PopupContent}"
                                ContentStringFormat="{TemplateBinding PopupContentStringFormat}"
                                ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"/>
              </wpf:PopupBox.PopupContent>
            </wpf:PopupBox>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Style variations -->

  <Style x:Key="MaterialDesignRaisedSplitButton" TargetType="{x:Type wpf:SplitButton}" BasedOn="{StaticResource MaterialDesignSplitButton}">
    <Setter Property="ButtonStyle" Value="{StaticResource MaterialDesignRaisedButton}" />
    <Setter Property="wpf:ElevationAssist.Elevation" Value="Dp6" />
    <Setter Property="RightButtonMargin" Value="-1" />
  </Style>

  <Style x:Key="MaterialDesignOutlinedSplitButton" TargetType="{x:Type wpf:SplitButton}" BasedOn="{StaticResource MaterialDesignSplitButton}">
    <Setter Property="ButtonStyle" Value="{StaticResource MaterialDesignOutlinedButton}" />
  </Style>

  <Style x:Key="MaterialDesignFlatSplitButton" TargetType="{x:Type wpf:SplitButton}" BasedOn="{StaticResource MaterialDesignSplitButton}">
    <Setter Property="ButtonStyle" Value="{StaticResource MaterialDesignFlatButton}" />
  </Style>

  <Style x:Key="MaterialDesignPaperSecondaryLightSplitButton" TargetType="{x:Type wpf:SplitButton}" BasedOn="{StaticResource MaterialDesignSplitButton}">
    <Setter Property="ButtonStyle" Value="{StaticResource MaterialDesignPaperSecondaryLightButton}" />
  </Style>

</ResourceDictionary>
