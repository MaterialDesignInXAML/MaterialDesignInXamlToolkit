<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters">

    <Style TargetType="{x:Type wpf:RatingBar}">
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="ValueItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="system:Int32">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Data="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"
                                  Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Control}, Path=Foreground}" />
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ValueItemContainerButtonStyle">
            <Setter.Value>
                <Style TargetType="wpf:RatingBarButton">
                    <Style.Setters>
                        <Setter Property="Command" Value="{x:Static wpf:RatingBar.SelectRatingCommand}"/>
                        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=Value}"/>
                        <Setter Property="wpf:RippleAssist.ClipToBounds" Value="False"/>
                        <Setter Property="wpf:RippleAssist.IsCentered" Value="True"/>
                        <Setter Property="wpf:RippleAssist.RippleSizeMultiplier" Value="0.5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="wpf:RatingBarButton">
                                    <Grid>
                                        <wpf:Ripple Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Focusable="False"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                RenderTransformOrigin=".5, .5"
                                                Tag="{DynamicResource PrimaryHueMidBrush}">
                                            <TextBlock.Foreground>
                                                <MultiBinding Converter="{x:Static wpf:RatingBar+TextBlockForegroundConverter.Instance}">
                                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=wpf:RatingBar}" Path="Orientation" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=wpf:RatingBar}" Path="Value" />
                                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                </MultiBinding>
                                            </TextBlock.Foreground>
                                            <wpf:Ripple.RenderTransform>
                                                <RotateTransform x:Name="RotateTransform"></RotateTransform>
                                            </wpf:Ripple.RenderTransform>
                                        </wpf:Ripple>
                                        <Canvas>
                                            <Grid x:Name="label1" Height="36" IsHitTestVisible="False" RenderTransformOrigin="0.5,1" Visibility="Collapsed">
                                                <Grid.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform Y="-40" X="0" />    <!-- TODO X should be calculated using a converter -->
                                                    </TransformGroup>
                                                </Grid.RenderTransform>
                                                <AdornerDecorator>
                                                    <AdornerDecorator.CacheMode>
                                                        <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </AdornerDecorator.CacheMode>
                                                    <Grid Effect="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}">
                                                        <Rectangle
                                                            Fill="{DynamicResource MaterialDesignToolTipBackground}"
                                                            Margin="0,0,0,5"
                                                            RadiusX="2"
                                                            RadiusY="2" />
                                                        <Polygon VerticalAlignment="Bottom" HorizontalAlignment="Center" Points="0,0 4.5,5 9,0" Fill="{DynamicResource MaterialDesignToolTipBackground}" />
                                                    </Grid>
                                                </AdornerDecorator>
                                                <TextBlock
                                                    Foreground="{DynamicResource MaterialDesignPaper}"
                                                    Margin="12,0,12,5"
                                                    TextAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=PreviewValue}">
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="label2" Height="31" IsHitTestVisible="False" RenderTransformOrigin="1,0.5" Visibility="Collapsed">
                                                <Grid.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform Y="-7" X="0" />    <!-- TODO X should be calculated using a converter -->
                                                    </TransformGroup>
                                                </Grid.RenderTransform>
                                                <AdornerDecorator>
                                                    <AdornerDecorator.CacheMode>
                                                        <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </AdornerDecorator.CacheMode>
                                                    <Grid Effect="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}">
                                                        <Rectangle
                                                            Fill="{DynamicResource MaterialDesignToolTipBackground}"
                                                            Margin="0,0,5,0"
                                                            RadiusX="2"
                                                            RadiusY="2" />
                                                        <Polygon VerticalAlignment="Center" HorizontalAlignment="Right" Points="0,0 6,5 0,10" Fill="{DynamicResource MaterialDesignToolTipBackground}" />
                                                    </Grid>
                                                </AdornerDecorator>
                                                <TextBlock
                                                    Foreground="{DynamicResource MaterialDesignPaper}"
                                                    Margin="12,0,17,0"
                                                    TextAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=PreviewValue}">
                                                </TextBlock>
                                            </Grid>
                                        </Canvas>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=Orientation}" Value="Horizontal" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=IsPreviewValueEnabled}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="label1" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=Orientation}" Value="Vertical" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=IsPreviewValueEnabled}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="label2" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <EventTrigger RoutedEvent="Click">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard TargetName="RotateTransform" TargetProperty="Angle">
                                                        <DoubleAnimationUsingKeyFrames>
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="360">
                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                    <SineEase EasingMode="EaseInOut" />
                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                            </EasingDoubleKeyFrame>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}}" Value="True">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="wpf:RatingBarButton">
                                        <wpf:Ripple Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Focusable="False"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    RenderTransformOrigin=".5, .5"
                                                    IsEnabled="False"
                                                    Tag="{DynamicResource PrimaryHueMidBrush}">
                                            <TextBlock.Foreground>
                                                <MultiBinding Converter="{x:Static wpf:RatingBar+TextBlockForegroundConverter.Instance}">
                                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=wpf:RatingBar}" Path="Min" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=wpf:RatingBar}" Path="Max" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=wpf:RatingBar}" Path="Orientation" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=wpf:RatingBar}" Path="Value" />
                                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                </MultiBinding>
                                            </TextBlock.Foreground>
                                        </wpf:Ripple>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpf:RatingBar}">
                    <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RatingButtons}"
                                  VerticalAlignment="Top"
                                  HorizontalAlignment="Left"
                                  Margin="{TemplateBinding Padding}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RatingBar}, Path=Orientation}" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".26" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>